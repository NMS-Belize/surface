# Generated by Django 3.2.13 on 2025-08-21 02:14

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('wx', '0027_auto_20230725_0352'),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Crop Name e.ge. "maize"', max_length=128, unique=True, verbose_name='Name')),
                ('crop_type', models.IntegerField(choices=[(1, 'Leafy vegetable'), (2, 'Root/tuber'), (3, 'Fruit/grain')], default=3, help_text='Crop Type (1 = Leafy vegetable, 2 = Root/tuber, 3 = Fruit/grain)', verbose_name='CropType')),
                ('plant_method', models.IntegerField(choices=[(0, 'Transplanted'), (1, 'Sown')], default=1, help_text='Planting method (0 = Transplanted, 1 =  Sown)', verbose_name='PlantMethod')),
                ('calendar_type', models.IntegerField(choices=[(1, 'Calendar days'), (2, 'Growing degree days')], default=2, help_text='Calendar Type (1 = Calendar days, 2 = Growing degree days)', verbose_name='CalendarType')),
                ('switch_gdd', models.BooleanField(default=False, help_text='Convert calendar to GDD mode if inputs are given in calendar days (False = No; True = Yes)', verbose_name='SwitchGDD')),
                ('emergence', models.IntegerField(default=80, help_text='Growing degree/Calendar days from sowing to emergence/transplant recovery', verbose_name='Emergence')),
                ('max_rooting', models.IntegerField(default=1420, help_text='Growing degree/Calendar days from sowing to maximum rooting', verbose_name='MaxRooting')),
                ('senescence', models.IntegerField(default=1420, help_text='Growing degree/Calendar days from sowing to senescence', verbose_name='Senescence')),
                ('maturity', models.IntegerField(default=1670, help_text='Growing degree/Calendar days from sowing to maturity', verbose_name='Maturity')),
                ('hi_start', models.IntegerField(default=850, help_text='Growing degree/Calendar days from sowing to start of yield formation', verbose_name='HIstart')),
                ('flowering', models.IntegerField(default=190, help_text='Duration of flowering in growing degree/calendar days (-999 for non-fruit/grain crops)', verbose_name='Flowering')),
                ('yld_form', models.IntegerField(default=775, help_text='Duration of yield formation in growing degree/calendar days', verbose_name='YldForm')),
                ('gdd_method', models.IntegerField(choices=[(1, 'FAO Method 1'), (2, 'FAO Method 2'), (3, 'FAO Method 3')], default=2, help_text='Growing degree day calculation method', verbose_name='GDDMethod')),
                ('t_base', models.FloatField(default=8, help_text='Base temperature (degC) below which growth does not progress', verbose_name='Tbase')),
                ('t_upp', models.FloatField(default=30, help_text='Upper temperature (degC) above which crop development no longer increases', verbose_name='Tupp')),
                ('pol_heat_stress', models.BooleanField(default=False, help_text='Pollination affected by heat stress (False = No, True = Yes)', verbose_name='PolHeatStress')),
                ('t_max_up', models.FloatField(default=40, help_text='Maximum air temperature (degC) above which pollination begins to fail', verbose_name='Tmax_up')),
                ('t_max_lo', models.FloatField(default=45, help_text='Maximum air temperature (degC) at which pollination completely fails', verbose_name='Tmax_lo')),
                ('pol_cold_stress', models.BooleanField(default=False, help_text='Pollination affected by cold stress (False = No, True = Yes)', verbose_name='PolColdStress')),
                ('t_min_up', models.FloatField(default=10, help_text='Minimum air temperature (degC) below which pollination begins to fail', verbose_name='Tmin_up')),
                ('t_min_lo', models.FloatField(default=5, help_text='Minimum air temperature (degC) at which pollination completely fails', verbose_name='Tmin_lo')),
                ('tr_cold_stress', models.BooleanField(default=False, help_text='Transpiration affected by cold temperature stress (False = No, True = Yes)', verbose_name='TrColdStress')),
                ('gdd_up', models.FloatField(default=12, help_text='Minimum growing degree days (degC/day) required for full crop transpiration potential', verbose_name='GDD_up')),
                ('gdd_lo', models.FloatField(default=0, help_text='Growing degree days (degC/day) at which no crop transpiration occurs', verbose_name='GDD_lo')),
                ('z_min', models.FloatField(default=0.3, help_text='Minimum effective rooting depth (m)', verbose_name='Zmin')),
                ('z_max', models.FloatField(default=1.7, help_text='Maximum rooting depth (m)', verbose_name='Zmax')),
                ('fshape_r', models.FloatField(default=1.3, help_text='Shape factor describing root expansion', verbose_name='fshape_r')),
                ('sx_top_q', models.FloatField(default=0.048, help_text='Maximum root water extraction at top of the root zone (m3\\/ m3\\/ day)', verbose_name='SxTopQ')),
                ('sx_bot_q', models.FloatField(default=0.0117, help_text='Maximum root water extraction at the bottom of the root zone (m3\\/ m3\\/ day)', verbose_name='SxBotQ')),
                ('seed_size', models.FloatField(default=6.5, help_text='Soil surface area (cm2) covered by an individual seedling at 90% emergence', verbose_name='SeedSize')),
                ('plant_pop', models.IntegerField(default=75000, help_text='Number of plants per hectare', verbose_name='PlantPop')),
                ('ccx', models.FloatField(default=0.96, help_text='Maximum canopy cover (fraction of soil cover)', verbose_name='CCx')),
                ('cdc', models.FloatField(default=0.01, help_text='Canopy decline coefficient (fraction per GDD/calendar day)', verbose_name='CDC')),
                ('cgc', models.FloatField(default=0.0125, help_text='Canopy growth coefficient (fraction per GDD)', verbose_name='CGC')),
                ('kcb', models.FloatField(default=1.05, help_text='Crop coefficient when canopy growth is complete but prior to senescence', verbose_name='Kcb')),
                ('fage', models.FloatField(default=0.3, help_text='Decline of crop coefficient due to ageing (%/day)', verbose_name='fage')),
                ('wp', models.FloatField(default=33.7, help_text='Water productivity normalized for ET0 and C02 (g/m2)', verbose_name='WP')),
                ('wpy', models.FloatField(default=100, help_text='Adjustment of water productivity in yield formation stage (% of WP)', verbose_name='WPy')),
                ('fsink', models.FloatField(default=0.5, help_text='Crop performance under elevated atmospheric CO2 concentration (%/100)', verbose_name='fsink')),
                ('hi0', models.FloatField(default=0.48, help_text='Reference harvest index', verbose_name='HI0')),
                ('dhi_pre', models.FloatField(default=0, help_text='Possible increase of harvest index due to water stress before flowering (%)', verbose_name='dHI_pre')),
                ('a_hi', models.FloatField(default=7, help_text='Coefficient describing positive impact on harvest index of restricted vegetative growth during yield formation', verbose_name='a_HI')),
                ('b_hi', models.FloatField(default=3, help_text='Coefficient describing negative impact on harvest index of stomatal closure during yield formation', verbose_name='b_HI')),
                ('dhi0', models.FloatField(default=15, help_text='Maximum allowable increase of harvest index above reference value', verbose_name='dHI0')),
                ('determinant', models.BooleanField(default=True, help_text='Crop Determinacy (False = Indeterminant, True = Determinant)', verbose_name='Determinant')),
                ('exc', models.FloatField(default=50, help_text='Excess of potential fruits', verbose_name='exc')),
                ('p_up1', models.FloatField(default=0, help_text='Upper soil water depletion threshold for water stress effects on affect canopy expansion', verbose_name='p_up1')),
                ('p_up2', models.FloatField(default=0, help_text='Upper soil water depletion threshold for water stress effects on canopy stomatal control', verbose_name='p_up2')),
                ('p_up3', models.FloatField(default=0, help_text='Upper soil water depletion threshold for water stress effects on canopy senescence', verbose_name='p_up3')),
                ('p_up4', models.FloatField(default=0, help_text='Upper soil water depletion threshold for water stress effects on canopy pollination', verbose_name='p_up4')),
                ('p_lo1', models.FloatField(default=0, help_text='Lower soil water depletion threshold for water stress effects on canopy expansion', verbose_name='p_lo1')),
                ('p_lo2', models.FloatField(default=0, help_text='Lower soil water depletion threshold for water stress effects on canopy stomatal control', verbose_name='p_lo2')),
                ('p_lo3', models.FloatField(default=0, help_text='Lower soil water depletion threshold for water stress effects on canopy senescence', verbose_name='p_lo3')),
                ('p_lo4', models.FloatField(default=0, help_text='Lower soil water depletion threshold for water stress effects on canopy pollination', verbose_name='p_lo4')),
                ('fshape_w1', models.FloatField(default=1, help_text='Shape factor describing water stress effects on canopy expansion', verbose_name='fshape_w1')),
                ('fshape_w2', models.FloatField(default=1, help_text='Shape factor describing water stress effects on stomatal control', verbose_name='fshape_w2')),
                ('fshape_w3', models.FloatField(default=1, help_text='Shape factor describing water stress effects on canopy senescence', verbose_name='fshape_w3')),
                ('fshape_w4', models.FloatField(default=1, help_text='Shape factor describing water stress effects on pollination', verbose_name='fshape_w4')),
                ('fshape_b', models.FloatField(default=13.8135, help_text='Shape factor describing the reduction in biomass production for insufficient growing degree days', verbose_name='fshape_b')),
                ('pct_z_min', models.FloatField(default=70, help_text='Initial percentage of minimum effective rooting depth', verbose_name='PctZmin')),
                ('fshape_ex', models.FloatField(default=-6, help_text='Shape factor describing the effects of water stress on root expansion', verbose_name='fshape_ex')),
                ('et_adj', models.BooleanField(default=True, help_text='Adjustment to water stress thresholds depending on daily ET0 (False = No, True = Yes)', verbose_name='ETadj')),
                ('aer', models.FloatField(default=5, help_text='Vol (%) below saturation at which stress begins to occur due to deficient aeration', verbose_name='Aer')),
                ('lag_aer', models.IntegerField(default=3, help_text='Number of days lag before aeration stress affects crop growth', verbose_name='LagAer')),
                ('beta', models.FloatField(default=12, help_text='Reduction (%) to p_lo3 when early canopy senescence is triggered', verbose_name='beta')),
                ('a_tr', models.FloatField(default=1, help_text='Exponent parameter for adjustment of Kcx once senescence is triggered', verbose_name='a_Tr')),
                ('germ_thr', models.FloatField(default=0.2, help_text='Proportion of total water storage needed for crop to germinate', verbose_name='GermThr')),
                ('cc_min', models.FloatField(default=0.05, help_text='Minimum canopy size below which yield formation cannot occur', verbose_name='CCmin')),
                ('max_flow_pct', models.FloatField(default=33.3, help_text='Proportion of total flowering time (%) at which peak flowering occurs', verbose_name='MaxFlowPct')),
                ('hi_ini', models.FloatField(default=0.01, help_text='Initial harvest index', verbose_name='HIini')),
                ('bsted', models.FloatField(default=0.000138, help_text='WP co2 adjustment parameter given by Steduto et al. 2007', verbose_name='bsted')),
                ('bface', models.FloatField(default=0.001165, help_text='WP co2 adjustment parameter given by FACE experiments', verbose_name='bface')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Soil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('soil_type', models.CharField(help_text='Soil classification e.g. "sandy_loam"', max_length=128, unique=True, verbose_name='soilType')),
                ('dz1', models.FloatField(default=0.1, help_text='Thickness of 1th soil compartment', verbose_name='dz1')),
                ('dz2', models.FloatField(default=0.1, help_text='Thickness of 2th soil compartment', verbose_name='dz2')),
                ('dz3', models.FloatField(default=0.1, help_text='Thickness of 3th soil compartment', verbose_name='dz3')),
                ('dz4', models.FloatField(default=0.1, help_text='Thickness of 4th soil compartment', verbose_name='dz4')),
                ('dz5', models.FloatField(default=0.1, help_text='Thickness of 5th soil compartment', verbose_name='dz5')),
                ('dz6', models.FloatField(default=0.1, help_text='Thickness of 6th soil compartment', verbose_name='dz6')),
                ('dz7', models.FloatField(default=0.1, help_text='Thickness of 7th soil compartment', verbose_name='dz7')),
                ('dz8', models.FloatField(default=0.1, help_text='Thickness of 8th soil compartment', verbose_name='dz8 ')),
                ('dz9', models.FloatField(default=0.1, help_text='Thickness of 9th soil compartment', verbose_name='dz9 ')),
                ('dz10', models.FloatField(default=0.1, help_text='Thickness of 10th soil compartment', verbose_name='dz10')),
                ('dz11', models.FloatField(default=0.1, help_text='Thickness of 11th soil compartment', verbose_name='dz11')),
                ('dz12', models.FloatField(default=0.1, help_text='Thickness of 12th soil compartment', verbose_name='dz12')),
                ('calc_shp', models.BooleanField(default=False, help_text='Calculate soil hydraulic properties (False = No, True = Yes)', verbose_name='CalcSHP')),
                ('adj_rew', models.BooleanField(default=True, help_text='Adjust default value for readily evaporable water (False = No, True = Yes)', verbose_name='AdjREW')),
                ('rew', models.FloatField(default=9.0, help_text='Readily evaporable water (mm)', verbose_name='REW')),
                ('calc_cn', models.BooleanField(default=True, help_text='Calculate curve number (False = No, True = Yes)', verbose_name='CalcCN')),
                ('cn', models.FloatField(default=61.0, help_text='Curve Number', verbose_name='CN')),
                ('z_res', models.FloatField(default=-999.0, help_text=' Depth of restrictive soil layer (negative value if not present)', verbose_name='zRes')),
                ('evap_z_surf', models.FloatField(default=0.04, help_text='Thickness of soil surface skin evaporation layer (m)', verbose_name='EvapZsurf')),
                ('evap_z_min', models.FloatField(default=0.15, help_text='Minimum thickness of full soil surface evaporation layer (m)', verbose_name='EvapZmin')),
                ('evap_z_max', models.FloatField(default=0.3, help_text='Maximum thickness of full soil surface evaporation layer (m)', verbose_name='EvapZmax')),
                ('kex', models.FloatField(default=1.1, help_text='Maximum soil evaporation coefficient', verbose_name='Kex')),
                ('fevap', models.FloatField(default=4, help_text='Shape factor describing reduction in soil evaporation in stage 2.', verbose_name='fevap')),
                ('f_wrel_exp', models.FloatField(default=0.4, help_text='Proportional value of Wrel at which soil evaporation layer expands', verbose_name='fWrelExp')),
                ('fwcc', models.FloatField(default=50, help_text='Maximum coefficient for soil evaporation reduction due to sheltering effect of withered canopy', verbose_name='fwcc')),
                ('z_cn', models.FloatField(default=0.3, help_text='Thickness of soil surface (m) used to calculate water content to adjust curve number', verbose_name='zCN')),
                ('z_germ', models.FloatField(default=0.3, help_text='Thickness of soil surface (m) used to calculate water content for germination', verbose_name='zGerm')),
                ('adj_cn', models.BooleanField(default=True, help_text='Adjust curve number for antecedent moisture content (False = No, True = Yes)', verbose_name='AdjCN')),
                ('fshape_cr', models.FloatField(default=16, help_text='Capillary rise shape factor', verbose_name='fshape_cr')),
                ('z_top', models.FloatField(default=0.1, help_text='Thickness of soil surface layer for water stress comparisons (m)', verbose_name='zTop')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

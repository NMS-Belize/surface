# Generated by Django 3.2.13 on 2023-07-25 03:52

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('wx', '0026_auto_20230711_1034'),
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceReportEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('equipment_order', models.CharField(choices=[('P', 'Primary Equipment'), ('S', 'Secondary Equipment')], default='F', max_length=1)),
                ('condition', ckeditor.fields.RichTextField()),
                ('classification', models.CharField(choices=[('F', 'Fully Functional'), ('P', 'Partially Functional'), ('N', 'Not Functional')], default='F', max_length=1, null=True)),
                ('equipment_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wx.equipmenttype')),
                ('maintenance_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wx.maintenancereport')),
            ],
        ),
        migrations.CreateModel(
            name='StationProfileEquipmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('equipment_type_order', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('equipment_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wx.equipmenttype')),
                ('station_profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wx.stationprofile')),
            ],
            options={
                'unique_together': {('station_profile', 'equipment_type'), ('station_profile', 'equipment_type_order')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='stationprofilecomponent',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='stationprofilecomponent',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='stationprofilecomponent',
            name='station_component',
        ),
        migrations.RemoveField(
            model_name='equipment',
            name='location',
        ),
        migrations.RemoveField(
            model_name='historicalequipment',
            name='location',
        ),
        migrations.DeleteModel(
            name='MaintenanceReportStationComponent',
        ),
        migrations.DeleteModel(
            name='StationComponent',
        ),
        migrations.DeleteModel(
            name='StationProfileComponent',
        ),
        migrations.AddField(
            model_name='maintenancereportequipment',
            name='new_equipment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='new_equipment', to='wx.equipment'),
        ),
        migrations.AddField(
            model_name='maintenancereportequipment',
            name='old_equipment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_equipment', to='wx.equipment'),
        ),
        migrations.AlterUniqueTogether(
            name='maintenancereportequipment',
            unique_together={('maintenance_report', 'equipment_type', 'equipment_order'), ('maintenance_report', 'new_equipment')},
        ),
    ]
